% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/kelp_fake.R
\name{kelp_fake}
\alias{kelp_fake}
\title{Create a kelp fake object.}
\description{
Create a kelp fake object.

Create a kelp fake object.
}
\details{
Exposes same interface as \code{\link[=kelp]{kelp()}} but stores files to a local temp
directory. Can be used for testing when a SeaweedFS instance
might not be available. All operations will create file ids will
return simulated data which matches structure of SeaweedFS. Uploading or
downloading files will copy to/from the temp directory.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{seaweed_url}}{Base URL for seaweed master. Can be a dummy value.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{kelp_fake$new()}}
\item \href{#method-upload_file}{\code{kelp_fake$upload_file()}}
\item \href{#method-download_file}{\code{kelp_fake$download_file()}}
\item \href{#method-upload_object}{\code{kelp_fake$upload_object()}}
\item \href{#method-download_object}{\code{kelp_fake$download_object()}}
\item \href{#method-upload_raw}{\code{kelp_fake$upload_raw()}}
\item \href{#method-download_raw}{\code{kelp_fake$download_raw()}}
\item \href{#method-delete}{\code{kelp_fake$delete()}}
\item \href{#method-delete_collection}{\code{kelp_fake$delete_collection()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\if{latex}{\out{\hypertarget{method-new}{}}}
\subsection{Method \code{new()}}{
Create a mock kelp client object for testing which doesn't require
a Seaweed instance to be running.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$new(seaweed_url)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seaweed_url}}{Root URL of Seaweed (can be anything for testing)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new \code{kelp_fake} object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-upload_file"></a>}}
\if{latex}{\out{\hypertarget{method-upload_file}{}}}
\subsection{Method \code{upload_file()}}{
Upload file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$upload_file(path, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{path}}{Path to file to be uploaded}

\item{\code{collection}}{Collection name, acts as a namespace for files.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The uploaded file ID.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-download_file"></a>}}
\if{latex}{\out{\hypertarget{method-download_file}{}}}
\subsection{Method \code{download_file()}}{
Download file

If called with an \code{id} matching an R object uploaded via
\href{#method-upload_object}{\code{kelp$upload_object()}}
then this will download raw bytes which can
be converted back to R object at later point using \code{unserialize}
or \code{readRDS}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$download_file(id, path = tempfile(), collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{File ID to read}

\item{\code{path}}{Path to download file to}

\item{\code{collection}}{Optional collection name this file belongs to.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The file contents
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-upload_object"></a>}}
\if{latex}{\out{\hypertarget{method-upload_object}{}}}
\subsection{Method \code{upload_object()}}{
Upload arbitrary R object

This serializes R object to raw vector of bytes and then
saves bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$upload_object(object, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{object}}{Object to be uploaded}

\item{\code{collection}}{Collection name, acts as a namespace.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The uploaded file ID.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-download_object"></a>}}
\if{latex}{\out{\hypertarget{method-download_object}{}}}
\subsection{Method \code{download_object()}}{
Download arbitrary R object

If data downloaded is not unserializable (i.e. it was
written using \href{#method-upload_file}{
\code{kelp$upload_file()}}) then
this will throw an error. See \href{#method-download_file}{
\code{kelp$download_file()}} to download as a file.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$download_object(id, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{File ID to download}

\item{\code{collection}}{Optional collection name this file belongs to.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The R object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-upload_raw"></a>}}
\if{latex}{\out{\hypertarget{method-upload_raw}{}}}
\subsection{Method \code{upload_raw()}}{
Upload vector of raw bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$upload_raw(raw, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{raw}}{Object to be uploaded}

\item{\code{collection}}{Collection name, acts as a namespace.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The uploaded file ID.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-download_raw"></a>}}
\if{latex}{\out{\hypertarget{method-download_raw}{}}}
\subsection{Method \code{download_raw()}}{
Download vector of raw bytes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$download_raw(id, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{File ID to download}

\item{\code{collection}}{Optional collection name this file belongs to.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Vector of raw bytes.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete"></a>}}
\if{latex}{\out{\hypertarget{method-delete}{}}}
\subsection{Method \code{delete()}}{
Delete file
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$delete(id, collection = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{File ID to delete}

\item{\code{collection}}{Optional collection name this file belongs to.
This helps speedup lookup - only the single id will be deleted.
See \href{#method-delete_collection}{
\code{kelp$delete_collection()}} to remove an entire
collection.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing, called for side effects
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-delete_collection"></a>}}
\if{latex}{\out{\hypertarget{method-delete_collection}{}}}
\subsection{Method \code{delete_collection()}}{
Delete a collection of files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{kelp_fake$delete_collection(collection)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{collection}}{Collection name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing, called for side effects
}
}
}
